{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"accountName": {
			"type": "string",
			"defaultValue": "modern-data-warehouse",
			"metadata": {
				"description": "Cosmos DB account name, max length 44 characters."
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "Japan East",
			"metadata": {
				"description": "Location for the Cosmos DB account."
			}
		},
		"primaryRegion":{
			"type":"string",
			"defaultValue": "Japan East",
			"metadata": {
				"description": "The primary replica region for the Cosmos DB account."
			}
		},
		"secondaryRegion":{
			"type":"string",
			"defaultValue": "Japan West",
			"metadata": {
			  "description": "The secondary replica region for the Cosmos DB account."
		  }
		},
		"defaultConsistencyLevel": {
			"type": "string",
			"defaultValue": "Session",
			"allowedValues": [ "Eventual", "ConsistentPrefix", "Session", "BoundedStaleness", "Strong" ],
			"metadata": {
				"description": "The default consistency level of the Cosmos DB account."
			}
		},
		"maxStalenessPrefix": {
			"type": "int",
			"minValue": 10,
			"defaultValue": 100000,
			"maxValue": 2147483647,
			"metadata": {
				"description": "Max stale requests. Required for BoundedStaleness. Valid ranges, Single Region: 10 to 1000000. Multi Region: 100000 to 1000000."
			}
		},
		"maxIntervalInSeconds": {
			"type": "int",
			"minValue": 5,
			"defaultValue": 300,
			"maxValue": 86400,
			"metadata": {
				"description": "Max lag time (minutes). Required for BoundedStaleness. Valid ranges, Single Region: 5 to 84600. Multi Region: 300 to 86400."
			}
		},	
		"multipleWriteLocations": {
			"type": "bool",
			"defaultValue": false,
			"allowedValues": [ true, false ],
			"metadata": {
				"description": "Enable multi-master to make all regions writable."
			}
		},
		"automaticFailover": {
			"type": "bool",
			"defaultValue": false,
			"allowedValues": [ true, false ],
			"metadata": {
				"description": "Enable automatic failover for regions. Ignored when Multi-Master is enabled."
			}
		},
		"databaseName": {
			"type": "string",
			"defaultValue": "moderndatawarehouse",
			"metadata": {
				"description": "The name for the SQL database."
			}
		},
		"sharedThroughput": {
			"type": "int",
			"defaultValue": 400,
			"minValue": 400,
			"maxValue": 1000000,
			"metadata": {
				"description": "The throughput for the database to be shared."
			}			
		},
		"sharedContainer1Name": {
			"type": "string",
			"defaultValue": "container1",
			"metadata": {
				"description": "The name for the first container with shared throughput."
			}
		},
		"sharedContainer1PartitionKey": {
			"type": "string",
			"defaultValue": "/Container1Id",
			"metadata": {
				"description": "The partition key for the first container with shared throughput."
			}
		},
		"sharedContainer2Name": {
			"type": "string",
			"defaultValue": "container2",
			"metadata": {
				"description": "The name for the second container with shared throughput."
			}
		},
		"sharedContainer2PartitionKey": {
			"type": "string",
			"defaultValue": "/Container2Id",
			"metadata": {
				"description": "The partition key for the second container with shared throughput."
			}
		},
		"sharedContainer3Name": {
			"type": "string",
			"defaultValue": "container3",
			"metadata": {
				"description": "The name for the third container with shared throughput."
			}
		},
		"sharedContainer3PartitionKey": {
			"type": "string",
			"defaultValue": "/Container3Id",
			"metadata": {
				"description": "The partition key for the third container with shared throughput."
			}
		}
	},
	"variables": {
		"accountName": "[toLower(parameters('accountName'))]",
		"consistencyPolicy": {
			"Eventual": {
				"defaultConsistencyLevel": "Eventual"
			},
			"ConsistentPrefix": {
				"defaultConsistencyLevel": "ConsistentPrefix"
			},
			"Session": {
				"defaultConsistencyLevel": "Session"
			},
			"BoundedStaleness": {
				"defaultConsistencyLevel": "BoundedStaleness",
				"maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
				"maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
			},
			"Strong": {
				"defaultConsistencyLevel": "Strong"
			}
		},
		"locations": 
		[ 
			{
				"locationName": "[parameters('primaryRegion')]",
				"failoverPriority": 0,
				"isZoneRedundant": false
			}, 
			{
				"locationName": "[parameters('secondaryRegion')]",
				"failoverPriority": 1,
				"isZoneRedundant": false
			}
		]
	},
	"resources": 
	[
		{
			"type": "Microsoft.DocumentDB/databaseAccounts",
			"name": "[variables('accountName')]",
			"apiVersion": "2019-08-01",
			"kind": "GlobalDocumentDB",
			"location": "[parameters('location')]",
			"properties": {
				"consistencyPolicy": "[variables('consistencyPolicy')[parameters('defaultConsistencyLevel')]]",
				"locations": "[variables('locations')]",
				"databaseAccountOfferType": "Standard",
				"enableAutomaticFailover": "[parameters('automaticFailover')]",
				"enableMultipleWriteLocations": "[parameters('multipleWriteLocations')]"
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
			"name": "[concat(variables('accountName'), '/', parameters('databaseName'))]",
			"apiVersion": "2019-08-01",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('accountName'))]" ],
			"properties":{
				"resource":{
					"id": "[parameters('databaseName')]"
				},
				"options": { "throughput": "[parameters('sharedThroughput')]" }
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
			"name": "[concat(variables('accountName'), '/', parameters('databaseName'), '/', parameters('sharedContainer1Name'))]",
			"apiVersion": "2019-08-01",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('accountName'), parameters('databaseName'))]" ],
			"properties":
			{
				"resource":{
					"id":  "[parameters('sharedContainer1Name')]",
					"partitionKey": {
						"paths": [
						"[parameters('sharedContainer1PartitionKey')]"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*"
							}
						]
					}
				}
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
			"name": "[concat(variables('accountName'), '/', parameters('databaseName'), '/', parameters('sharedContainer2Name'))]",
			"apiVersion": "2019-08-01",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('accountName'), parameters('databaseName'))]" ],
			"properties":
			{
				"resource":{
					"id":  "[parameters('sharedContainer2Name')]",
					"partitionKey": {
						"paths": [
						"[parameters('sharedContainer2PartitionKey')]"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*"
							}
						]
					}
				}
			}
		},
		{
			"type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
			"name": "[concat(variables('accountName'), '/', parameters('databaseName'), '/', parameters('sharedContainer3Name'))]",
			"apiVersion": "2019-08-01",
			"dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('accountName'), parameters('databaseName'))]" ],
			"properties":
			{
				"resource":{
					"id":  "[parameters('sharedContainer3Name')]",
					"partitionKey": {
						"paths": [
						"[parameters('sharedContainer3PartitionKey')]"
						],
						"kind": "Hash"
					},
					"indexingPolicy": {
						"indexingMode": "consistent",
						"includedPaths": [{
								"path": "/*"
							}
						]
					}
				}
			}
		}
	]
}
